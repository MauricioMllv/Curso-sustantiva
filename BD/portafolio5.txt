Entidades Clave:

Libro
Autor
Ejemplar
Prestamo
Modelo Entidad-Relación:


+----------+       +------------+       +------------+       +-----------+
|  Libro   | ----- |  Ejemplar  | ----- |  Prestamo  |       |   Autor   |
+----------+       +------------+       +------------+       +-----------+
| id_libro |       | id_ejemplar|       | id_prestamo|       | id_autor  |
| titulo   |       | id_libro   |       | id_ejemplar|       | nombre    |
| autor    |       | estado     |       | fecha_ini  |       | apellido  |
| etc.     |       +------------+       | fecha_fin  |       | etc.      |
+----------+                            +------------+       +-----------+
Relaciones y Atributos Clave:

La relación entre Libro y Autor es (muchos a muchos), ya que un libro puede tener varios autores y un autor puede escribir varios libros. Se necesita una tabla intermedia para manejar esta relación.
La entidad Libro tiene un atributo clave (id_libro).
La entidad Autor tiene un atributo clave (id_autor).
La entidad Ejemplar tiene un atributo clave (id_ejemplar).
Entidades Principales y Relaciones:

Entidades Principales: Libro, Autor, Ejemplar, Prestamo.
Relaciones:
Libro - Autor (muchos a muchos)
Libro - Ejemplar (uno a muchos)
Ejemplar - Prestamo (uno a muchos)
Tipo de Relación:

Libro y Autor tienen una relación (muchos a muchos), manejada a través de una tabla intermedia.
Libro y Ejemplar tienen una relación (uno a muchos), ya que un libro puede tener varios ejemplares.
Ejemplar y Prestamo tienen una relación (uno a muchos), ya que un ejemplar puede ser prestado varias veces.
Entidad Débil:

La entidad Ejemplar es una entidad débil que depende de la existencia de un Libro. Esto significa que un Ejemplar no puede existir sin un Libro asociado.
Modelo Relacional:


Libro:
- id_libro (PK)
- titulo
- etc.

Autor:
- id_autor (PK)
- nombre
- apellido
- etc.

Ejemplar:
- id_ejemplar (PK)
- id_libro (FK)
- estado
- etc.

Prestamo:
- id_prestamo (PK)
- id_ejemplar (FK)
- fecha_ini
- fecha_fin
- etc.

Libro_Autor:
- id_libro (FK)
- id_autor (FK)
Reglas de Transformación:

Las entidades se convierten en tablas.
Los atributos se convierten en columnas.
Las claves primarias se mantienen como claves primarias en las tablas correspondientes.
Las relaciones se convierten en claves foráneas en las tablas relacionadas.
Tipos de Datos y Restricciones:

Se utilizan tipos de datos apropiados para cada columna (por ejemplo, VARCHAR para nombres, DATE para fechas).
Se aplican restricciones de clave primaria y foránea para garantizar la integridad de los datos.
Normalización y Desnormalización:

Se aplicará la normalización para reducir redundancias, como dividir la información de autor en una tabla separada.
La desnormalización podría ser útil en situaciones donde la optimización del rendimiento es prioritaria y las redundancias controladas no comprometen la integridad de los datos.
Diccionario de Datos:
Libro:
id_libro (PK, INT)
titulo (VARCHAR)
etc.
Autor:
id_autor (PK, INT)
nombre (VARCHAR)
apellido (VARCHAR)
etc.
Ejemplar:
id_ejemplar (PK, INT)
id_libro (FK, INT)
estado (VARCHAR)
etc.
Prestamo:
id_prestamo (PK, INT)
id_ejemplar (FK, INT)
fecha_ini (DATE)
fecha_fin (DATE)
etc.

CREATE TABLE Usuario (
	ID_Rut VARCHAR(50) PRIMARY KEY,
	nombre VARCHAR(50) NOT NULL,
	apellido VARCHAR(50) NOT NULL,
	telefono INT NOT NULL,
	email VARCHAR(50) NULL
);

CREATE TABLE Autor (
	ID_autor INT PRIMARY KEY,
	nombre VARCHAR(50) NOT NULL,
	apellido VARCHAR(50) NOT NULL,
	edad INT NULL,
	nacionalidad VARCHAR(50) NULL
);

CREATE TABLE Libro (
	ID_libro INT PRIMARY KEY,
	titulo VARCHAR(50) NOT NULL,
	fecha_publicacion DATE NOT NULL,
	ediciones INT NULL,
	genero VARCHAR(50) NULL,
	ejemplar INT NOT NULL,
	ID_autor INT,
	FOREIGN KEY (ID_autor) REFERENCES Autor(ID_autor)
);

CREATE TABLE Prestamo (
	ID_prestamo INT PRIMARY KEY,
	ID_libro INT,
	ID_rut VARCHAR(50),
	fecha_prestamo DATE,
	fecha_entrega DATE,
	FOREIGN KEY (ID_libro) REFERENCES Libro(ID_libro),
	FOREIGN KEY (ID_rut) REFERENCES Usuario(ID_rut)
)

-- Tabla Autor
INSERT INTO Autor (ID_autor, nombre, apellido, edad, nacionalidad)
VALUES
    (1, 'Gabriel', 'García Márquez', 71, 'Colombiano'),
    (2, 'Isabel', 'Allende Llona', 79, 'Chilena'),
    (3, 'Mario', 'Vargas Llosa', 86, 'Peruano'),
    (4, 'Paulo', 'Coelho', 75, 'Brasileño'),
    (5, 'Patricio', 'Pimienta', 57, 'Chileno');

-- Tabla Libro
INSERT INTO Libro (ID_libro, titulo, fecha_publicacion, ediciones, genero, ejemplar, ID_autor)
VALUES
    (101, 'Cien años de soledad', '1967-01-01', 2, 'Realismo Mágico', 3, 1),
    (102, 'Crónica de una muerte anunciada', '1981-01-01', 1, 'Realismo Mágico', 5, 1),
    (103, 'La casa de los espíritus', '1982-03-23', 2, 'Realismo Mágico', 3, 2),
    (104, 'Eva Luna', '1987-01-01', 1, 'Ficción', 4, 2),
    (105, 'La ciudad y los perros', '1963-01-01', 1, 'Novela', 2, 3),
    (106, 'La tía Julia y el escribidor', '1977-01-01', 1, 'Ficción', 3, 3),
    (107, 'El alquimista', '1988-01-01', 1, 'Espiritual', 6, 4),
    (108, 'Veronika decide morir', '1998-01-01', 1, 'Ficción', 7, 4),
    (109, 'Los secretos de la pimienta', '2010-01-01', 1, 'Gastronomía', 1, 5),
    (110, 'El jardín de las especias', '2015-01-01', 1, 'Gastronomía', 2, 5);

-- Insertar 10 usuarios
INSERT INTO Usuario (ID_Rut, nombre, apellido, telefono, email)
VALUES
    ('11111111-1', 'Juan', 'Pérez', 987654321, 'juan.perez@example.com'),
    ('22222222-2', 'María', 'González', 912345678, 'maria.gonzalez@example.com'),
    ('33333333-3', 'Pedro', 'Rodríguez', 945678912, 'pedro.rodriguez@example.com'),
    ('44444444-4', 'Ana', 'López', 956789123, 'ana.lopez@example.com'),
    ('55555555-5', 'Carlos', 'Martínez', 967891234, 'carlos.martinez@example.com'),
    ('66666666-6', 'Laura', 'Sánchez', 978912345, 'laura.sanchez@example.com'),
    ('77777777-7', 'Diego', 'Fernández', 989123456, 'diego.fernandez@example.com'),
    ('88888888-8', 'Isabel', 'Torres', 990123456, 'isabel.torres@example.com'),
    ('99999999-9', 'Andrés', 'Ramírez', 901234567, 'andres.ramirez@example.com'),
    ('10101010-0', 'Valentina', 'Hernández', 912345678, 'valentina.hernandez@example.com');

INSERT INTO Prestamo (ID_prestamo,ID_libro, ID_rut, fecha_prestamo, fecha_entrega)
VALUES (1, 101, '11111111-1', '2024-03-26', '2024-04-26');

-- Actualizar la cantidad de ejemplares en la tabla Libro
UPDATE Libro
SET ejemplar = ejemplar - 1
WHERE ID_libro = 101;